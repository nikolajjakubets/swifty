---
- name: install keystone Pike repo
  dnf:
    name: 'https://repos.fedorapeople.org/repos/openstack/openstack-pike/rdo-release-pike-1.noarch.rpm'
    state: present
  register: pike_installed

- name: install keystone Pike components
  dnf:
    name: '{{ item }}'
    state: present
  with_items:
    - openstack-keystone
    - httpd
    - mod_wsgi
    - python-openstackclient
  when: pike_installed.changed

- name: configure domain address for keystone
  lineinfile:
    path: /etc/hosts
    regexp: '{{ ks_domain }}'
    line: '127.0.0.1 {{ ks_domain }}'
  when: pike_installed.changed

- name: configure connection in keystone
  lineinfile:
    path: /etc/keystone/keystone.conf
    insertafter: '^\[database\]'
    regexp: 'connection ='
    line: 'connection = mysql+pymysql://{{ ks_db_user }}:{{ ks_db_pass }}@{{ ks_domain }}/{{ ks_db_name }}'
  when: pike_installed.changed

- name: configure provider in keystone
  lineinfile:
    path: /etc/keystone/keystone.conf
    insertafter: '^\[token\]'
    regexp: 'provider ='
    line: 'provider = fernet'
  when: pike_installed.changed

- name: bootstrap the keystone
  shell: |
    /bin/sh -c "keystone-manage db_sync" '{{ ks_db_name }}'
    keystone-manage fernet_setup --keystone-user {{ ks_db_user }} --keystone-group {{ ks_db_name }}
    keystone-manage credential_setup --keystone-user {{ ks_db_user }} --keystone-group {{ ks_db_name }}
    keystone-manage bootstrap --bootstrap-password {{ ks_domain_pass }} --bootstrap-admin-url http://{{ ks_domain }}:35357/v3/ --bootstrap-internal-url http://{{ ks_domain }}:5000/v3/ --bootstrap-public-url http://{{ ks_domain }}:5000/v3/ --bootstrap-region-id RegionOne
  when: pike_installed.changed

- name: configure httpd for domain '{{ ks_domain }}'
  lineinfile:
    path: /etc/httpd/conf/httpd.conf
    regexp: '^#ServerName '
    line: 'ServerName {{ ks_domain }}'
  when: pike_installed.changed

- name: link wsgi-keynote
  file:
    src: /usr/share/keystone/wsgi-keystone.conf
    dest: /etc/httpd/conf.d/wsgi-keystone.conf
    state: link
  when: pike_installed.changed

- name: enable httpd
  service: name=httpd state=started enabled=yes
  when: pike_installed.changed

- name: export keystone to root user
  lineinfile:
    path: /root/.bashrc
    regexp: '{{ item.re }}'
    line: '{{ item.re }}={{ item.val }}'
  with_items:
    - { re: 'export OS_USERNAME',            val: 'admin' }
    - { re: 'export OS_PASSWORD',            val: '{{ ks_domain_pass }}' }
    - { re: 'export OS_PROJECT_NAME',        val: 'admin' }
    - { re: 'export OS_USER_DOMAIN_NAME',    val: 'Default' }
    - { re: 'export OS_PROJECT_DOMAIN_NAME', val: 'Default' }
    - { re: 'export OS_AUTH_URL',            val: 'http://{{ ks_domain }}:5000/v3' }
    - { re: 'export OS_IDENTITY_API_VERSION',val: '3' }
  when: pike_installed.changed

- name: create keystone roles,projects,domains
  shell: |
    openstack role create swifty.admin
    openstack role create swifty.owner
    openstack role create swifty.ui
    openstack domain create swifty
    openstack project create --domain swifty swyadmin
    openstack user create --project swyadmin --domain swifty --password {{ ks_swyadmin_pass }} swyadmin
    openstack role add --user-domain swifty --user swyadmin --project-domain swifty --project swyadmin swifty.admin
    openstack role add --user-domain swifty --user swyadmin --project-domain swifty --project swyadmin swifty.owner
    openstack user set --project admin admin
  when: pike_installed.changed
