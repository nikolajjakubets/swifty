---
- name: install mongodb
  dnf:
    name: '{{ item }}'
    state: present
  register: mongod_installed
  with_items:
    - mongodb-server
    - mongo-tools
    - mongodb

- name: enable mongod
  service: name=mongod state=started enabled=yes

- name: create system user admin
  shell: |
    mongo --quiet localhost:27017/{{ mgo_master_db_admin }} --eval 'db.createUser({ user: "{{ mgo_master_db_admin_name }}",pwd:"{{ mgo_master_db_admin_pass }}",roles:[{role:"userAdminAnyDatabase",db:"{{ mgo_master_db_admin }}"}]});'
  ignore_errors: True
  when: mongod_installed.changed

- name: create swifty main dbs and users
  shell: |
    mongo --quiet localhost:27017/{{ mgo_master_db_main }} --eval 'db.createUser({user:"{{ mgo_master_db_gate }}", pwd:"{{ mgo_master_db_gpass }}", roles:[{role:"dbOwner",db:"{{ mgo_master_db_main }}"},{role:"read",db:"{{ mgo_master_db_tenant }}"}]});'
    mongo --quiet localhost:27017/{{ mgo_master_db_main }} --eval 'db.createUser({user:"{{ mgo_master_db_admd }}", pwd:"{{ mgo_master_db_apass }}", roles:[{role:"dbOwner",db:"{{ mgo_master_db_tenant }}"}]});'
  when: mongod_installed.changed

- name: create collections for tenant db
  shell: mongo --quiet localhost:27017/{{ mgo_master_db_tenant }} --eval 'db.createCollection("{{ item }}");'
  with_items:
    - "Limits"
    - "Plans"
  when: mongod_installed.changed

- name: create collections for main db
  shell: mongo --quiet localhost:27017/{{ mgo_master_db_gate }} --eval 'db.createCollection("{{ item }}");'
  with_items:
    - "Function"
    - "Mware"
    - "Logs"
    - "FnStats"
    - "FnStatsArch"
    - "TenantStats"
    - "TenantStatsArch"
    - "Balancer"
    - "BalancerRS"
  when: mongod_installed.changed

- name: create s3 user
  shell: mongo --quiet localhost:27017/{{ s3_db_name }} --eval 'db.createUser({user:"{{ s3_db_user }}", pwd:"{{ s3_db_pass }}", roles:[{role:"dbOwner",db:"{{ s3_db_name }}"}]});'
  when: mongod_installed.changed

- name: create s3 collections
  shell: mongo --quiet localhost:27017/{{ s3_db_name }} --eval 'db.createCollection("{{ item }}");'
  with_items:
    - "S3Iams"
    - "S3Buckets"
    - "S3Uploads"
    - "S3Objects"
    - "S3ObjectData"
    - "S3AccessKeys"
  when: mongod_installed.changed

- name: copy mongod.conf template
  template:
    src: "templates/mongod.conf"
    dest: "/etc/mongod.conf"
  when: mongod_installed.changed

- name: restart mongod
  service: name=mongod state=restarted enabled=yes
  when: mongod_installed.changed
