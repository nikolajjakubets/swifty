swagger: '2.0'
info:
  version: 1.0.0
  title: gate api
host: 'localhost:8686'
basePath: /v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /login:
    post:
      summary: Sign-in request
      parameters:
        - in: body
          name: data
          description: Credentials
          required: true
          schema:
            $ref: '#/definitions/UserLogin'
      responses:
        '200':
          description: OK
          headers:
            X-Subject-Token:
              type: string
              description: Auth token for further requests
          schema:
            $ref: '#/definitions/UserToken'
        '400':
          description: Something went wrong
        '401':
          description: Bad username/pass
          
  /stats:
    get:
      summary: Show user statistics
      parameters:
        - in: query
          name: periods
          type: integer
          required: false
          description: Number of stats periods to report
        - in: header
          name: X-Auth-Token
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserStatsResp'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
          
  /project/list:
    post:
      summary: List projects
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            properties:
              functions:
                type: array
                items:
                  $ref: '#/definitions/ProjectItem'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /project/del:
    post:
      summary: Delete project and all functoins and mwares in it
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - in: body
          name: data
          description: Project removal options
          required: true
          schema:
            $ref: '#/definitions/ProjectDel'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token

  /functions:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - name: project
        in: query
        description: Project to work on
        required: false
        type: string
    get:
      tags:
        - function
      summary: List functions
      parameters:
        - in: query
          name: periods
          type: integer
          required: false
          description: Number of stats periods to report
        - in: query
          name: details
          type: string
          required: false
          description: Whether or not to show details about functions (value itself is ignored)
        - in: query
          name: name
          type: string
          required: false
          description: Name of a function to find (useful to resolve ID by name)
        - in: query
          name: label
          type: string
          required: false
          description: Filter output by label(s)
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FunctionInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    post:
      tags:
        - function
      summary: Create funciton
      parameters:
        - name: data
          in: body
          description: Middleware description
          required: true
          schema:
            $ref: '#/definitions/FunctionAdd'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FunctionInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token

  /functions/{fid}:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - in: path
        name: fid
        type: string
        required: true
        description: Function ID
    get:
      tags:
        - function
      summary: Show function info (with details)
      parameters:
        - in: query
          name: periods
          type: integer
          required: false
          description: Number of stats periods to report
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FunctionInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    put:
      tags:
        - function
      summary: Set function properties (some)
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/FunctionUpdate'
          required: true
          description: Parameters to update. Note, that this is not an atomic call, each of the parameters from argument gets update one-by-one without rolling back any if some fails. Once some update fails, the call stops. So it's recommended to call this with only a single parameter set.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FunctionInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token

    delete:
      tags:
        - function
      summary: Remove function
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /functions/{fid}/run:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - in: path
        name: fid
        type: string
        required: true
        description: Function ID
    post:
      tags:
        - function
      summary: Run funciton
      parameters:
        - name: data
          in: body
          description: Arguments
          required: false
          schema:
            $ref: '#/definitions/FunctionRun'
      responses:
        '200':
          description: Function run result
          schema:
            $ref: '#/definitions/FunctionRunResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token  
          
  /functions/{fid}/logs:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - in: path
        name: fid
        type: string
        required: true
        description: Function ID
      - in: query
        name: last
        type: string
        required: false
        description: "Get logs for last pariod. Format is ([0-9]+h)?([0-9]+m)?([0-9]+s)?"
    get:
      tags:
        - function
      summary: Show function logs
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FunctionLogEntry'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
          
  /functions/{fid}/stats:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - in: path
        name: fid
        type: string
        required: true
        description: Function ID
    get:
      tags:
        - function
      summary: Show function stats
      parameters:
        - in: query
          name: periods
          type: integer
          required: false
          description: Number of stats periods to report
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FunctionStatsResp'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
          
  /functions/{fid}/wait:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - in: path
        name: fid
        type: string
        required: true
        description: Function ID
    post:
      tags:
        - function
      summary: Wait for an event on a function
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/FunctionWait'
          required: false
          description: Wait options
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
        '524':
          description: TImeout has occurred

          
  /functions/{fid}/authctx:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - in: path
        name: fid
        type: string
        required: true
        description: Function ID
    get:
      tags:
        - function
      summary: Get function auth context (controlling middleware) name
      responses:
        '200':
          description: OK
          schema:
            type: string
            example: 'my_authjwt'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    put:
      tags:
        - function
      summary: Set function auth context
      parameters:
        - in: body
          name: data
          schema:
            type: string
          required: true
          description: Auth mware name to set (empty string is accepted and unsets the context)
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token

  /functions/{fid}/size:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - in: path
        name: fid
        type: string
        required: true
        description: Function ID
    get:
      tags:
        - function
      summary: Get function size
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FunctionSize'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    put:
      tags:
        - function
      summary: Set function size
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/FunctionSize'
          required: true
          description: Mware name to set (empty string is accepted and unsets the context)
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
          
  /functions/{fid}/sources:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - in: path
        name: fid
        type: string
        required: true
        description: Function ID
    get:
      tags:
        - function
      summary: Get function sources
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FunctionSources'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    put:
      tags:
        - function
      summary: Set (update) function sources
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/FunctionSources'
          required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token

  /functions/{fid}/env:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - in: path
        name: fid
        type: string
        required: true
        description: Function ID
    get:
      tags:
        - function
      summary: Get function environment
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    put:
      tags:
        - function
      summary: Set (update) function environment
      parameters:
        - in: body
          name: data
          schema:
            type: array
            items:
              type: string
          required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token


  /functions/{fid}/middleware:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - in: path
        name: fid
        type: string
        required: true
        description: Function ID
    get:
      tags:
        - function
      summary: Get function middleware
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MwareInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    post:
      tags:
        - function
      summary: Attach mware to function
      parameters:
        - in: body
          name: mwid
          required: true
          schema:
            type: string
          description: Middleware ID
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /functions/{fid}/middleware/{mid}:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - in: path
        name: fid
        type: string
        required: true
        description: Function ID
      - in: path
        name: mid
        type: string
        required: true
        description: Middleware ID
    delete:
      tags:
        - function
      summary: Detach mware from function
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token

  /functions/{fid}/accounts:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - in: path
        name: fid
        type: string
        required: true
        description: Function ID
    get:
      tags:
        - function
      summary: Get accounts, to which the function has access to
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AccInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    post:
      tags:
        - function
      summary: Attach account to function
      parameters:
        - in: body
          name: mwid
          required: true
          schema:
            type: string
          description: Account ID
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token

  /functions/{fid}/accounts/{aid}:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - in: path
        name: fid
        type: string
        required: true
        description: Function ID
      - in: path
        name: aid
        type: string
        required: true
        description: Account ID
    delete:
      tags:
        - function
      summary: Detach account from function
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token

  /functions/{fid}/s3buckets:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - in: path
        name: fid
        type: string
        required: true
        description: Function ID
    get:
      tags:
        - function
      summary: Get function S3 buckets
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
              description: Name of attached S3 buckets
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    post:
      tags:
        - function
      summary: Attach S3 bucket to function
      parameters:
        - in: body
          name: bname
          required: true
          schema:
            type: string
          description: Bucket name
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /functions/{fid}/s3buckets/{bname}:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - in: path
        name: fid
        type: string
        required: true
        description: Function ID
      - in: path
        name: bname
        type: string
        required: true
        description: Bucket name
    delete:
      tags:
        - function
      summary: Detach S3 bucket from function
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token

  /functions/{fid}/triggers:
    parameters:
      - in: path
        name: fid
        description: Funciton ID
        required: true
        type: string
      - in: header
        name: X-Auth-Token
        type: string
        required: true
    get:
      tags:
        - triggers
        - function
      summary: List event triggers for the function
      parameters:
        - in: query
          name: name
          type: string
          required: false
          description: Name of an event to find (useful to resolve ID by name)
      responses:
        '200':
          description: OK
          schema:
              type: array
              items:
                $ref: '#/definitions/FunctionEvent'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    post:
      tags:
        - triggers
      summary: Add event trigger for the function
      parameters:
        - name: data
          in: body
          description: Event trigger description
          required: true
          schema:
            $ref: '#/definitions/FunctionEvent'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FunctionEvent'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token

  /functions/{fid}/triggers/{eid}:
    parameters:
      - in: path
        name: fid
        description: Funciton ID
        required: true
        type: string
      - in: path
        name: eid
        description: Event trigger ID
        required: true
        type: string
      - in: header
        name: X-Auth-Token
        type: string
        required: true
    get:
      tags:
        - triggers
        - function
      summary: Get event trigger details
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FunctionEvent'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    delete:
      tags:
        - triggers
      summary: Remove event trigger
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /middleware:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - name: project
        in: query
        description: Project to work on
        required: false
        type: string
    get:
      tags:
        - mware
      summary: List middleware
      parameters:
        - in: query
          name: type
          type: string
          required: false
          description: Middleware type to list
        - in: query
          name: details
          type: string
          required: false
          description: Whether or not to show mware details (value itself is ignored)
        - in: query
          name: name
          type: string
          required: false
          description: Name of a mware item to find (useful to resolve ID by name)
        - in: query
          name: label
          type: string
          required: false
          description: Filter output by label(s)
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MwareInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    post:
      tags:
        - mware
      summary: Create middleware
      parameters:
        - name: data
          in: body
          description: Middleware description
          required: true
          schema:
            $ref: '#/definitions/MwareAdd'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MwareInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /middleware/{mid}:
    parameters:
      - in: path
        name: mid
        description: Middleware ID
        required: true
        type: string
      - in: header
        name: X-Auth-Token
        type: string
        required: true
    get:
      tags:
        - mware
      summary: Show mware info
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MwareInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    delete:
      tags:
        - mware
      summary: Create middleware
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /s3/access:
    post:
      tags:
        - mware
        - s3
      summary: Request keys for S3 access
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - name: data
          in: body
          description: Middleware to remove
          required: true
          schema:
            $ref: '#/definitions/S3Access'
      responses:
        '200':
          description: Middleware removed
          schema:
            $ref: '#/definitions/S3Creds'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /deployments:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - name: project
        in: query
        description: Project to work on
        required: false
        type: string
    get:
      tags:
        - deploy
      summary: List deployments
      parameters:
        - in: query
          name: name
          type: string
          required: false
          description: Name of deployment to find (useful to resolve ID by name)
        - in: query
          name: label
          type: string
          required: false
          description: Filter output by label(s)
      responses:
        '200':
          description: All objects has been /add-ed
          schema:
            $ref: '#/definitions/DeployInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    post:
      tags:
        - deploy
      parameters:
        - name: data
          in: body
          description: Deployment description
          required: true
          schema:
            $ref: '#/definitions/DeployStart'
      summary: Create deployment
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeployInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /deployments/{did}:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - name: did
        in: path
        description: Deployment ID
        required: true
        type: string
    get:
      tags:
        - deploy
      summary: Show info about deployment
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeployInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    delete:
      tags:
        - deploy
      summary: Remove deployment
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token

  /auths:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - name: project
        in: query
        description: Project to work on
        required: false
        type: string
    get:
      tags:
        - deploy
        - auth
      summary: List AaaS ()authentication-as-a-service) deployments
      responses:
        '200':
          description: All objects has been /add-ed
          schema:
            $ref: '#/definitions/AuthInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    post:
      tags:
        - deploy
        - auth
      parameters:
        - name: data
          in: body
          description: AaaS description
          required: true
          schema:
            $ref: '#/definitions/AuthAdd'
      summary: Create AaaS deployment
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeployInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  
  /auths/{aid}:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - name: aid
        in: path
        description: Deployment ID
        required: true
        type: string
    get:
      tags:
        - deploy
        - auth
      summary: Show info about AaaS deployment
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeployInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    delete:
      tags:
        - deploy
        - auth
      summary: Remove AaaS deployment
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token

  /accounts:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
    get:
      tags:
        - accounts
      parameters:
        - in: query
          name: type
          type: string
          required: false
          description: Accounts type to list
      summary: List added accounts
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    post:
      tags:
        - accounts
      parameters:
        - name: data
          in: body
          description: Account description
          required: true
          schema:
            $ref: '#/definitions/AccAdd'
      summary: Add account indo
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
          
  /accounts/{aid}:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - name: aid
        in: path
        description: Account ID
        required: true
        type: string
    get:
      tags:
        - accounts
      summary: Show info about account
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    put:
      tags:
        - accounts
      parameters:
        - name: data
          in: body
          description: Update description
          required: true
          schema:
            $ref: '#/definitions/AccUpdate'
      summary: Update account date
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    delete:
      tags:
        - accounts
      summary: Remove account info
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
          
  /repos:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
    get:
      tags:
        - repos
      summary: List available repositories
      parameters:
        - in: query
          name: aid
          type: string
          required: false
          description: Account ID to show repos from
        - in: query
          name: attached
          type: string
          required: false
          description: Value "true" or "false" to show only (un)attached repos
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RepoInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    post:
      tags:
        - repos
      parameters:
        - name: data
          in: body
          description: Attach (save info and clone) repo
          required: true
          schema:
            $ref: '#/definitions/RepoAdd'
      summary: Add account indo
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RepoInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
          
  /repos/{rid}:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - name: rid
        in: path
        description: Repo ID
        required: true
        type: string
    get:
      tags:
        - repos
      summary: Show info about repo
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RepoInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    put:
      tags:
        - repos
      summary: Update info about repo
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/RepoUpdate'
          required: true
          description: Variables to update for a repo
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
    delete:
      tags:
        - repos
      summary: Detach repository
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
          
  /repos/{rid}/files:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - name: rid
        in: path
        description: Repo ID
        required: true
        type: string
    get:
      tags:
        - repos
      summary: List files in the repository
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RepoFile'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token

  /repos/{rid}/files/{fname}:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - name: rid
        in: path
        description: Repo ID
        required: true
        type: string
      - name: fname
        in: path
        description: Path to file
        required: true
        type: string
    get:
      tags:
        - repos
      summary: Read file from repo
      responses:
        '200':
          description: OK
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token

  /repos/{rid}/desc:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - name: rid
        in: path
        description: Repo ID
        required: true
        type: string
    get:
      tags:
        - repos
      summary: Get repository description
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RepoDesc'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
          
  /repos/{rid}/pull:
    parameters:
      - in: header
        name: X-Auth-Token
        type: string
        required: true
      - name: rid
        in: path
        description: Repo ID
        required: true
        type: string
    post:
      tags:
        - repos
      summary: Force pull (update) of the repository
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
          
  /info/langs:
    get:
      summary: Show supported languages
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            properties:
              langs:
                type: array
                items:
                  type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /info/langs/{lang}:
    get:
      summary: Show info about language runtime environment
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - name: lang
          in: path
          description: Language
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LangInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token

  /info/mwares:
    get:
      summary: Show supported mware types
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            properties:
              mwares:
                type: array
                items:
                  type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/GateError'
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
definitions:
  UserLogin:
    required:
      - username
      - password
    properties:
      username:
        type: string
        example: john@doe.com
      password:
        type: string
        example: secretpass123
  UserToken:
    properties:
      expires:
        type: string
        description: UnixDate time of Token expiration
      endpoint:
        type: string
        description: Gate addr:port to talk to further
  GateError:
    properties:
      code:
        type: integer
        description: Error code
      message:
        type: string
        description: Error text
  ProjectItem:
    properties:
      project:
        type: string
        example: my-project
  ProjectDel:
    required:
      - project
    properties:
      project:
        type: string
        example: my-project
  FunctionInfo:
    properties:
      id:
        type: string
        description: Unique ID, system-wide
      name:
        type: string
        description: Function name (reported for /list/info operation)
      project:
        type: string
        description: Project the FN lives in
      labels:
        type: array
        items:
          type: string
      state:
        type: string
        description: Function state
        example: ready
      version:
        type: string
        description: Function code version
        example: 0
      url:
        type: string
        description: URL for direct calls if event.source is "url"
        example: "/call/ki4r4380984csdlsiduo9049843jk"
      code:
        $ref: '#/definitions/FunctionCode'
      size:
        $ref: '#/definitions/FunctionSize'
      stats:
        type: array
        description: Per-period statistics, see FunctionStatsResp for details
        items:
          $ref: '#/definitions/FunctionStats'
      authctx:
        type: string
        description: ID of auth mware that must authorize the caller before running FN
      userdata:
        type: string
        description: The data provided during /add call

  FunctionStatsResp:
    type: object
    description: Responce with FN stats
    properties:
      stats:
        type: array
        description: Per-period statistics, "till"-sorted descending. Each period is incremental to previous. The 0th one is "till now"
        items:
          $ref: '#/definitions/FunctionStats'
  UserStatsResp:
    type: object
    description: Responce with user stats
    properties:
      stats:
        type: array
        description: Per-period statistics, "till"-sorted descending. Each period is incremental to previous. The 0th one is "till now"
        items:
          $ref: '#/definitions/UserStats'

  FunctionStats:
    type: object
    description: Statistics about function
    properties:
      called:
        type: integer
        description: Number of funciton invovations so far
        example: 42
      timeouts:
        type: integer
        description: Number of timeouts (included in called)
      errors:
        type: integer
        description: Number of fn run errors (included in called)
      lastcall:
        type: string
        description: Time or last call in RFC1123Z format
        example: 'Mon Dec 25 14:18:18 MSK 2017'
      time:
        type: integer
        description: Total time spent in function code (in microseconds)
        example: 123000
      gbs:
        type: number
        description: Mem*time consumed so far, in GB * sec
      bytesout:
        type: integer
        description: Total size of JSON objects returned from function
      till:
        type: string
        description: Time (RFC1123Z) till which stats are collected (if empty means "till now")
      from:
        type: string
        description: Time (RFC1123Z) from which stats are collected (if empty means "till tenant creation time")
  UserStats:
    type: object
    description: Statistics about user
    properties:
      called:
        type: integer
        description: Number of all funcitons invocations so far
        example: 42
      gbs:
        type: number
        description: Mem*time consumed so far, in GB * sec
      bytesout:
        type: integer
        description: Total size of JSON objects returned from all user functions
      till:
        type: string
        description: Time (RFC1123Z) till which stats are collected (if empty means "till now")
      from:
        type: string
        description: Time (RFC1123Z) from which stats are collected (if empty means "till tenant creation time")
  FunctionEventCron:
    type: object
    description: Cron string and arguments
    required:
      - tab
      - args
    properties:
      tab:
        type: string
        description: Cron string in classical notation
        example: '* * * * * *'
      args:
        type: object
        description: Dict with args to pass to FN when this cron fires
        additionalProperties:
          type: string
        example:
          - arg: value
  FunctionEventS3:
    type: object
    description: Bucket to receive envets from
    required:
      - bucket
      - ops
    properties:
      bucket:
        type: string
        description: 'Bucket name in S3'
      ops:
        type: string
        description: 'Comma-separated list of operations'
        example: 'put'
      pattern:
        type: string
        description: 'Pattern to match the object key'
        example: '/foo/bar/*.img'
  FunctionEvent:
    type: object
    description: Event specification
    required:
      - name
      - source
    properties:
      id:
        type: string
        description: Used in responces
      name:
        type: string
      source:
        type: string
        description: 'Event source type, supported by platform'
        example: 'url, cron, s3'
      cron:
        $ref: '#/definitions/FunctionEventCron'
      s3:
        $ref: '#/definitions/FunctionEventS3'
      url:
        type: string
        description: 'Function callable URL if the source is "url"'
  FunctionSources:
    type: object
    description: Sources description
    required:
      - type
    properties:
      type:
        type: string
        description: Sources type ("code")
        example: code, git
      code:
        type: string
        description: Base64 encoded source file for type == code
        example: 'cHJpbnQoIkhlbGxvIHdvcmxkIikK'
      repo:
        type: string
        description: Path to file in a repo for type == git
        example: '<repoId>/path/to/file.go'
      sync:
        type: boolean
        description: When set and type is "git" the function will be auto-updates once the repo file changes

  FunctionCode:
    type: object
    description: Code description
    required:
      - lang
    properties:
      lang:
        type: string
        description: 'Language ("python", "golang", ...)'
        example: python
      env:
        type: array
        items:
          type: string
          example: FOO=bar
  FunctionSize:
    type: object
    description: Function runtime size specification
    properties:
      memory:
        type: integer
        description: size in megabytes
        example: 128
      timeout:
        type: integer
        description: timeout in milliseconds
        example: 10
      rate:
        type: integer
        description: max calls per second
        example: 100
      burst:
        type: integer
        description: rate-limiter burst value
        example: 10
  FunctionUpdate:
    properties:
      userdata:
        type: string
        description: And string user wishes to keep with this FN
      state/:
        type: string
        description: State to set (e.g. "ready" or "deactivted")
  FunctionAdd:
    required:
      - name
      - sources
      - code
    properties:
      name:
        type: string
        example: my-function
      project:
        type: string
        example: my-project
      userdata:
        type: string
        description: And string user wishes to keep with this FN
      authctx:
        type: string
        description: ID of auth mware
      sources:
        $ref: '#/definitions/FunctionSources'
      code:
        $ref: '#/definitions/FunctionCode'
      size:
        $ref: '#/definitions/FunctionSize'
      mware:
        type: array
        items:
          type: string
          example: mymariadb
      s3buckets:
        type: array
        items:
          type: string
          example: foobucket

  FunctionLogEntry:
    description: Entry in function logs
    properties:
      event:
        type: string
        description: Event name
        example: "run"
      ts:
        type: string
        description: Timestamp in UnixDate format
      text:
        type: string
        description: Log entry text (stdout and stderr typically)
  FunctionWait:
    description: Wait options
    properties:
      timeout:
        type: integer
        description: Time in msec to wait for an event to occur
      version:
        type: string
        description: >-
                When a function version equals or (!) greater than this becomes
                available for execution, the event occurs. Note, that older versions
                may still be there when the event happens.
  FunctionRun:
    description: Function ID and arguments
    required:
      - args
    properties:
      args:
        type: object
        description: Dict with arguments
        additionalProperties:
          type: string
        example:
          - foo: bar
            baz: fuz
      content:
        type: string
        description: Type of the body (either "text/plain" or "application/json")
      body:
        type: string
        description: Request body
      claims:
        type: object
        description: A string:any dict with JWT claims as expected by FN
      method:
        type: string
        description: HTTP method this FN would see
      path:
        type: string
        description: Part of the URL the FN would see
      event:
        type: string
        description: An event that the FN would see. When callev via URL trigger, this would be "call"
      src:
        $ref: '#/definitions/FunctionSources'
        description: Sources to run in this fn's context, instead of added ones
  FunctionRunResult:
    required:
      - code
      - return
    properties:
      code:
        type: integer
        description: Result of the execution (0 == all went OK)
      return:
        type: string
        description: JSON-encoded function return object
        example: {"message": "hello, world"}
      stdout:
        type: string
        description: String with stdout captured while running
      stderr:
        type: string
        description: String with stderr captured while running
  MwareAdd:
    type: object
    description: Middleware specification
    required:
      - name
      - type
    properties:
      name:
        type: string
        description: Just an name
        example: mymariadb
      project:
        type: string
        description: Project to create mware in
        example: myproject
      type:
        type: string
        description: Middleware type
        example: maria
      userdata:
        type: string
        description: And string user wishes to keep with this mware
  MwareInfo:
    type: object
    description: Middleware inforamtion
    properties:
      id:
        type: string
        description: Mware ID (reported for list/info operation)
      name:
        type: string
        description: Mware name
      project:
        type: string
        description: Project the FN lives in
      labels:
        type: array
        items:
          type: string
      type:
        type: string
        description: Middleware type
        example: maria
      userdata:
        type: string
        description: String provided during /add call
      disk_usage:
        type: integer
        description: Disk usage in KBytes
  S3Access:
    type: object
    description: Description of the access requested
    properties:
      project:
        type: string
        description: The project to get S3 creds for
      bucket:
        type: string
        description: if empty, access to "the whole s3" within the project is requested
      lifetime:
        type: integer
        description: Key validity period in seconds
      access:
        type: array
        description: List of options. The "hidden" one is to be set for keys that are not planned to be shown to user (e.g. -- used by UI for itself).
        items:
          type: string
          example: hidden
  S3Creds:
    type: object
    description: Keys to access S3
    properties:
      endpoint:
        type: string
        description: Addr:Port pair to talk S3 protocol to
      key:
        type: string
      secret:
        type: string
      expires:
        type: integer
        description: Lifetime in seconds
      accid:
        type: string
        description: Identifier of a user, used in various s3 operations, e.g. webserver access

  DeployStart:
    type: object
    description: Description of deployment
    required:
      - name
    properties:
      project:
        type: string
      name:
        type: string
      functions:
        type: array
        items:
          $ref: '#/definitions/FunctionAdd'
      mwares:
        type: array
        items:
          $ref: '#/definitions/MwareAdd'
  DeployItemInfo:
    type: object
    description: Info about a deploy item
    properties:
      type:
        type: string
        description: Item type, "function" or "middleware"
      name:
        type: string
      state:
        type: string
        description: Item state, "ready", "dead" or other. See function/mware states for details
  DeployInfo:
    type: object
    description: Info about deployment
    properties:
      id:
        type: string
        description: Mware ID (reported for list/info operation)
      name:
        type: string
        description: Mware name
      project:
        type: string
        description: Project the FN lives in
      labels:
        type: array
        items:
          type: string
      state:
        type: string
        description: State of deploying -- "starting", "ready", "stalled" or "terminating"
      items:
        type: array
        items:
          $ref: '#/definitions/DeployItemInfo'
          
  AuthInfo:
    type: object
    description: AaaS entry description
    properties:
      id:
        type: string
        description: Deployment ID
      name:
        type: string
        description: Deployment name
        
  AuthAdd:
    type: object
    description: AaaS creation request
    properties:
      name:
        type: string
      type:
        type: string
        description: AaaS type.
        example: jwt

  AccAdd:
    type: object
    required:
      - type
    description: Description of an account
    properties:
      type:
        type: string
        description: Account type. Can be "github"
      name:
        type: string
        description: Name of the user
      token:
        type: string
        description: Personal access token of the user
        
  AccUpdate:
    type: object
    description: Updating an account
    properties:
      token:
        type: string
        description: Personal access token of the user
        
  AccInfo:
    type: object
    description: Info about account
    properties:
      id:
        type: string
      type:
        type: string
      name:
        type: string
      token:
        type: string
        
  RepoAdd:
    type: object
    description: Repo description
    required:
      - type
    properties:
      type:
        type: string
        description: Repository type. Can be "github"
      url:
        type: string
        description: URL to clone the repo from
      account_id:
        type: string
        description: ID of account this repo should be cloned/pulled from
      userdata:
        type: string
        description: Random text
      pulling:
        type: string
        description: Repo pull policy
        example: "periodic"
        
  RepoUpdate:
    type: object
    description: Repo update parameters
    properties:
      pulling:
        type: string

  RepoDesc:
    type: object
    description: Repo contents description
    properties:
      desc:
        type: string
        description: Description of the repo
      files:
        type: array
        items:
          $ref: '#/definitions/RepoEntry'

  RepoFile:
    type: object
    description: Repo file/directory description
    required:
      - type
      - label
      - path
    properties:
      label:
        type: string
        description: Name of the entry
      path:
        type: string
        description: Path of the entry
      type:
        type: string
        description: Entry type, "dir" or "file"
      lang:
        type: string
        description: Suggested (by filename extention) language
      children:
        type: array
        items:
          $ref: '#/definitions/RepoFile'

  RepoEntry:
    type: object
    description: Repo dentry description
    properties:
      name:
        type: string
        description: Name of the entry
      desc:
        type: string
        description: Description of the entry
      path:
        type: string
        description: Path to file
      lang:
        type: string
        description: Suggested language

  RepoInfo:
    type: object
    description: Repo information
    properties:
      id:
        type: string
        description: Attached repo ID. Unattached don't have this field
      type:
        type: string
      url:
        type: string
      state:
        type: string
        description: State of the repo. Can be "cloning", "ready", "stalled" or "unattached"
      commit:
        type: string
        description: Top-most commit of the repo
      account_id:
        type: string
      userdata:
        type: string
      pulling:
        type: string
      desc:
        type: boolean
        description: Whether or not this repo has a description

  LangInfo:
    type: object
    description: Info about language runtime
    properties:
      version:
        type: string
        description: Whatever the $binary --version command returns
      packages:
        type: array
        items:
          type: string
          description: Name (and version) of a package in tool-specific format
