swagger: '2.0'
info:
  version: 1.0.0
  title: gate api
host: 'localhost:8686'
basePath: /v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /login:
    post:
      summary: Sign-in request
      parameters:
        - in: body
          name: data
          description: Credentials
          required: true
          schema:
            $ref: '#/definitions/UserLogin'
      responses:
        '200':
          description: OK
          headers:
            X-Subject-Token:
              type: string
              description: Auth token for further requests
        '400':
          description: Something went wrong
        '401':
          description: Bad username/pass
  /project/list:
    post:
      summary: List projects
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            properties:
              functions:
                type: array
                items:
                  $ref: '#/definitions/ProjectItem'
        '400':
          description: Bad request
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /project/del:
    post:
      summary: Delete project and all functoins and mwares in it
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - in: body
          name: data
          description: Project removal options
          required: true
          schema:
            $ref: '#/definitions/ProjectDel'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  
  /function/list:
    post:
      summary: List functions
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - in: body
          name: data
          description: List parameters
          required: true
          schema:
            $ref: '#/definitions/FunctionList'
      responses:
        '200':
          description: OK
          schema:
            properties:
              functions:
                type: array
                items:
                  $ref: '#/definitions/FunctionItem'
        '400':
          description: Bad request
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /function/add:
    post:
      summary: Add a function
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - name: data
          in: body
          description: Function specification
          required: true
          schema:
            $ref: '#/definitions/FunctionAdd'
      responses:
        '200':
          description: Function added
        '400':
          description: Some error occurred
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /function/update:
    post:
      summary: Update function code and/or properties
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - name: data
          in: body
          description: Update description
          required: true
          schema:
            $ref: '#/definitions/FunctionUpdate'
      responses:
        '200':
          description: Function updated
        '400':
          description: Something went wrong
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /function/remove:
    post:
      summary: Remove a function
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - name: data
          in: body
          description: Function to remove
          required: true
          schema:
            $ref: '#/definitions/FunctionRemove'
      responses:
        '200':
          description: Function removed
        '400':
          description: Something went wrong
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /function/run:
    post:
      summary: Manual execution trigger
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - name: data
          in: body
          description: Function ID and arguments
          required: false
          schema:
            $ref: '#/definitions/FunctionRun'
      responses:
        '200':
          description: Function run result
          schema:
            $ref: '#/definitions/FunctionRunResult'
        '400':
          description: Bad request
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /function/logs:
    post:
      summary: Show logs of a function
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - name: data
          in: body
          description: Function name to see logs for
          required: true
          schema:
            $ref: '#/definitions/FunctionID'
      responses:
        '200':
          description: OK
          schema:
            properties:
              logs:
                type: array
                items:
                  $ref: '#/definitions/FunctionLogEntry'
        '400':
          description: Something went wrong
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /function/info:
    post:
      summary: Show extended info about a function
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - name: date
          in: body
          description: Function name
          required: true
          schema:
            $ref: '#/definitions/FunctionID'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FunctionInfo'
        '400':
          description: Bad request
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /function/stats:
    post:
      summary: Show function statistics
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - name: date
          in: body
          description: Function name
          required: true
          schema:
            $ref: '#/definitions/FunctionID'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FunctionStats'
        '400':
          description: Bad request
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /function/code:
    post:
      summary: Show function code
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - name: date
          in: body
          description: Function name
          required: true
          schema:
            $ref: '#/definitions/FunctionXID'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FunctionSources'
        '400':
          description: Bad request
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /mware/list:
    post:
      summary: List middleware
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - name: data
          in: body
          description: List parameters
          required: true
          schema:
            $ref: '#/definitions/MwareList'
      responses:
        '200':
          description: OK
          schema:
            properties:
              mware:
                type: array
                items:
                  $ref: '#/definitions/MwareItem'
        '400':
          description: Bad request
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /mware/add:
    post:
      summary: Add middleware
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - name: data
          in: body
          description: Middleware specification
          required: true
          schema:
            $ref: '#/definitions/MwareAdd'
      responses:
        '200':
          description: Middleware added
        '400':
          description: Bad request
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /mware/remove:
    post:
      summary: Remove middleware
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - name: data
          in: body
          description: Middleware to remove
          required: true
          schema:
            $ref: '#/definitions/MwareRemove'
      responses:
        '200':
          description: Middleware removed
        '400':
          description: Bad request
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /info/langs:
    post:
      summary: Show supported languages
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            properties:
              langs:
                type: array
                items:
                  type: string
        '400':
          description: Bad request
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
  /info/mwares:
    post:
      summary: Show supported mware types
      parameters:
        - in: header
          name: X-Auth-Token
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            properties:
              mwares:
                type: array
                items:
                  type: string
        '400':
          description: Bad request
        '401':
          description: Need to authenticate
        '403':
          description: Bad authentication token
definitions:
  UserLogin:
    required:
      - username
      - password
    properties:
      username:
        type: string
        example: john@doe.com
      password:
        type: string
        example: secretpass123
  ProjectItem:
    properties:
      project:
        type: string
        example: my-project
  ProjectDel:
    required:
      - project
    properties:
      project:
        type: string
        example: my-project
  FunctionList:
    properties:
      project:
        type: string
        example: my-project
  FunctionInfo:
    properties:
      state:
        type: string
        description: Function state
        example: ready
      version:
        type: string
        description: Function code version
        example: 0
      url:
        type: string
        description: URL for direct calls if event.source is "url"
        example: "/call/ki4r4380984csdlsiduo9049843jk"
      code:
        $ref: '#/definitions/FunctionCode'
      event:
        $ref: '#/definitions/FunctionEvent'
      size:
        $ref: '#/definitions/FunctionSize'
      stats:
        $ref: '#/definitions/FunctionStats'
      mware:
        type: array
        items:
          type: string
          example:
            - mymariadb
              mys3strg
  FunctionStats:
    type: object
    description: Statistics about function
    properties:
      called:
        type: integer
        description: Number of funciton invovations so far
        example: 42
      lastcall:
        type: string
        description: Time or last call in UnixDate format
        example: 'Mon Dec 25 14:18:18 MSK 2017'
      time:
        type: integer
        description: Total time spent in function code (in microseconds)
        example: 123000
  FunctionEvent:
    type: object
    description: Event specification
    required:
      - source
    properties:
      source:
        type: string
        description: 'Event source type, supported by platform'
        example: url
      crontab:
        type: string
        description: Cron string if source is "cron"
        example: '* * * * * *'
      mwid:
        type: string
        description: Mware ID if type is "mware"
        example: myrmq
      s3bucket:
        type: string
        description: S3 bucket name if source is "mware" and mwid refers to an s3 type
        example: mybucket
      mqueue:
        type: string
        description: MQ queue name if type is "mware" and mwid refers to a rabbitmq type
        example: myqueue
  FunctionSources:
    type: object
    description: Sources description
    required:
      - type
    properties:
      type:
        type: string
        description: Sources type ("code")
        example: code
      code:
        type: string
        description: Base64 encoded source file
        example: 'cHJpbnQoIkhlbGxvIHdvcmxkIikK'
  FunctionCode:
    type: object
    description: Code description
    required:
      - lang
    properties:
      lang:
        type: string
        description: 'Language ("python", "golang", ...)'
        example: python
      env:
        type: array
        items:
          type: string
          example: FOO=bar
  FunctionSize:
    type: object
    description: Function runtime size specification
    properties:
      memory:
        type: integer
        description: size in megabytes
        example: 128
      timeout:
        type: integer
        description: timeout in milliseconds
        example: 10
      rate:
        type: integer
        description: max calls per second
        example: 100
      burst:
        type: integer
        description: rate-limiter burst value
        example: 10
  FunctionAdd:
    required:
      - name
      - sources
      - code
    properties:
      project:
        type: string
        example: my-project
      name:
        type: string
        example: my-function
      sources:
        $ref: '#/definitions/FunctionSources'
      code:
        $ref: '#/definitions/FunctionCode'
      event:
        $ref: '#/definitions/FunctionEvent'
      size:
        $ref: '#/definitions/FunctionSize'
      mware:
        type: array
        items:
          type: string
          example: mymariadb
  FunctionUpdate:
    required:
      - name
    properties:
      project:
        type: string
        example: my-project
      name:
        type: string
        example: my-function
      code:
        type: string
        description: Base64 encoded source file
        example: 'cHJpbnQoIkhlbGxvIHdvcmxkIikK'
      size:
        $ref: '#/definitions/FunctionSize'
      mware:
        type: array
        description: 'No value means "leave as is", any other value, even empty list, means "set to this"'
        items:
          type: string
          example: mymariadb
  FunctionRemove:
    required:
      - name
    properties:
      project:
        type: string
        example: my-project
      name:
        type: string
        example: my-function
  FunctionID:
    required:
      - name
    properties:
      project:
        type: string
        example: my-project
      name:
        type: string
        example: my-function
  FunctionXID:
    required:
      - name
      - version
    properties:
      project:
        type: string
        example: my-project
      name:
        type: string
        example: my-function
      version:
        type: string
        example: 0
  FunctionItem:
    properties:
      name:
        type: string
        example: my-function
      state:
        type: string
        example: ready
        description: function state description
      timeout:
        type: integer
        example: 10
        description: timeout in msec
  FunctionLogEntry:
    description: Entry in function logs
    properties:
      event:
        type: string
        description: Event name
        example: "run"
      ts:
        type: string
        description: Timestamp in UnixDate format
      text:
        type: string
        description: Log entry text (stdout and stderr typically)
  FunctionRun:
    description: Function ID and arguments
    required:
      - name
    properties:
      project:
        type: string
        example: my-project
      name:
        type: string
        example: my-function
      args:
        type: object
        description: Dict with arguments
        additionalProperties:
          type: string
        example:
          - foo: bar
            baz: fuz
  FunctionRunResult:
    required:
      - return
    properties:
      return:
        type: string
        description: JSON-encoded function return object
        example: {"message": "hello, world"}
      stdout:
        type: string
        description: String with stdout captured while running
      stderr:
        type: string
        description: String with stderr captured while running
  MwareItem:
    type: object
    description: Middleware item description
    required:
      - id
      - type
    properties:
      id:
        type: string
        description: Middleware id
        example: mymariadb
      type:
        type: string
        description: Type of middleware
        example: maria
  MwareAdd:
    type: object
    description: Middleware specification
    required:
      - id
      - type
    properties:
      project:
        type: string
        example: my-project
      id:
        type: string
        description: Just an identifier
        example: mymariadb
      type:
        type: string
        description: Middleware type
        example: maria
  MwareRemove:
    type: object
    description: Middleware specification
    required:
      - id
    properties:
      project:
        type: string
        example: my-project
      id:
        type: string
        description: Just an identifier
        example: mymariadb
  MwareList:
    properties:
      project:
        type: string
        example: my-project
