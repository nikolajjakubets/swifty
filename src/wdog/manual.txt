It's possible to test watchdog w/o wrapping it into container.


*** Python:

1. Start watchdog with local IP, some port and timeout, e.g.

    SWD_FUNCTION_DESC='{"timeout": 1000, "podtoken": "a"}' SWD_POD_IP='192.168.122.197' SWD_PORT='8686' python3 src/wdog/main.py

2. In another terminal curl it with data, e.g.

    curl -i 192.168.122.197:8686/v1/run -d'{"args":{...},"podtoken":"a"}'

*** Golang:

1. Build watchdog

    make swy-wdog-go

2. Build runner. For this some preparations should be done

    cp src/common/xqueue/queue.go $(GOPATH)/src/xqueue/
    cp code_with_fn.go $(GOPATH)/src/swycode/
    go build src/wdog/runner.go
    cp runner /go/src/swycode/function

3. Start wdog

    SWD_FUNCTION_DESC='{"timeout": 1000, "podtoken": "a"}' SWD_POD_IP='192.168.122.197' SWD_PORT='8686' ./swy-wdog-go

4. Then curl it with data
